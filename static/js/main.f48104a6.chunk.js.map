{"version":3,"sources":["logo.svg","workers/fractal.worker.js","fractalDemo.js","demos.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Worker","__webpack_public_path__","Fractal","props","state","canvasId","width","height","expr","zoom","center","iterations","closeColor","farColor","boundary","canvas","pieces","initState","ctx","document","getElementById","this","getContext","workers","createImageData","Array","h","Math","floor","console","log","i","fractalPiece","fractalWorker","onmessage","event","data","putImageData","img","start","alert","postMessage","target","value","search","setState","math","toString","renderFractal","e","preventDefault","type","onChange","handleExpr","min","handleIterations","handleCenter","handleZoom","handleCloseColor","handleFarColor","w","handleSizeInput","onClick","handleUpdate","id","React","Component","SizeInput","square","name","handleRadioInput","checked","max","handleSquare","handleHeight","handleWidth","Demo","demo","App","className","src","logo","alt","href","rel","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f48104a6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"f7af3c09af027ba025e5.worker.js\");\n};","import React from 'react';\r\nimport * as math from 'mathjs';\r\nimport fractalWorker from './workers/fractal.worker.js';\r\n\r\n\r\nclass Fractal extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      canvasId: this.props.canvasId,\r\n      width: 200,\r\n      height: 200,\r\n      expr: 'z^2 + z0',\r\n      zoom: '2',\r\n      center: '0',\r\n      iterations: 10,\r\n      closeColor: \"#fcf796\",\r\n      farColor: \"#8383fc\",\r\n      boundary: 2,\r\n      canvas: {height:0, width:0},\r\n      pieces: 10,\r\n    };\r\n    \r\n    this.initState = this.state;\r\n  }\r\n  \r\n  renderFractal(){\r\n\r\n    var canvas = document.getElementById(this.state.canvasId);\r\n    var ctx = canvas.getContext(\"2d\");\r\n    var fractalData = ctx.createImageData(this.state.width, this.state.height);\r\n    var workers = new Array(this.state.pieces);\r\n    var h = Math.floor(this.state.height/this.state.pieces);\r\n    console.log(h);\r\n    for (var i = 0; i < this.state.pieces; i++){\r\n      //if(i){h += this.state.height - (h*this.state.pieces)};\r\n\r\n      var fractalPiece = ctx.createImageData(this.state.width,\r\n                                            h + (i==(this.state.pieces-1))*(this.state.height - (h*this.state.pieces)));\r\n\r\n      workers[i] = new fractalWorker();\r\n      workers[i].onmessage = function(event){\r\n\r\n        if (typeof(event.data) == 'string'){\r\n          alert('problem generating fractal: ' + event.data);\r\n          return;\r\n        }\r\n        ctx.putImageData(event.data.img, 0, event.data.start);\r\n      }\r\n      \r\n      workers[i].postMessage({state: this.state, img: fractalPiece, start:h*i});\r\n    }\r\n    \r\n  }\r\n  \r\n  //~~~~~~~~~~~~~~~Handlers~~~~~~~~~~~~~~~~~\r\n\r\n  handleExpr(event) {\r\n    var n = event.target.value.search(/[^0-9zi+\\-*\\/^(). ]/);\r\n    if (n == -1) this.setState({expr: event.target.value});\r\n  }\r\n\r\n  handleIterations(event) {\r\n    this.setState({iterations: event.target.value});\r\n  }\r\n\r\n  handleCloseColor(event) {\r\n    this.setState({closeColor: event.target.value});\r\n  }\r\n\r\n  handleFarColor(event) {\r\n    this.setState({farColor: event.target.value});\r\n  }\r\n\r\n  handleWidth(event) {\r\n    this.setState({width: event.target.value});\r\n  }\r\n\r\n  handleHeight(event) {\r\n    this.setState({height: event.target.value});\r\n  }\r\n\r\n  handleSizeInput(height, width) {\r\n    this.setState({\r\n      height: height,\r\n      width: width,\r\n    });\r\n  }\r\n\r\n  handleCenter(event) {\r\n    var n = event.target.value.search(/[^0-9i+\\-*\\/^(). ]/);\r\n    if (n == -1) this.setState({center: event.target.value});\r\n  }\r\n\r\n  handleZoom(event) {\r\n    var n = event.target.value.search(/[^0-9i+\\-*\\/^(). ]/);\r\n    if (n == -1) this.setState({zoom: event.target.value});\r\n  }\r\n\r\n  handleUpdate(event) {\r\n    try {\r\n      this.setState(\r\n        {\r\n          center: math.evaluate(this.state.center).toString(),\r\n          zoom: math.evaluate(this.state.zoom).toString(),\r\n          canvas: {width: this.state.width, height: this.state.height},\r\n        },\r\n        this.renderFractal\r\n      );\r\n    }\r\n    catch(e) {\r\n      alert('Problem in Fractal.handleUpdate: '+e.toString());\r\n    }\r\n\r\n    event.preventDefault();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({canvas: {width: this.state.width, height: this.state.height}},\r\n                  this.renderFractal);\r\n  }\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <div>\r\n        <form>\r\n          <table>\r\n            <tbody>\r\n              <tr>\r\n                <td>function:</td>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    onChange={e => this.handleExpr(e)}\r\n                    value={this.state.expr}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>iterations:</td>\r\n                <td>\r\n                  <input\r\n                    type=\"number\"\r\n                    min=\"0\"\r\n                    onChange={e => this.handleIterations(e)}\r\n                    value={this.state.iterations}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>center (complex):</td>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    onChange={e => this.handleCenter(e)}\r\n                    value={this.state.center}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>zoom (complex):</td>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    onChange={e => this.handleZoom(e)}\r\n                    value={this.state.zoom}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>colors:</td>\r\n                <td>\r\n                  <input\r\n                    type=\"color\"\r\n                    onChange={e => this.handleCloseColor(e)}\r\n                    value={this.state.closeColor}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"color\"\r\n                    onChange={e => this.handleFarColor(e)}\r\n                    value={this.state.farColor}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <SizeInput\r\n                height={this.state.height}\r\n                width={this.state.width}\r\n                onChange={(h,w) => this.handleSizeInput(h,w)}\r\n              />\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update\"\r\n                    onClick={e => this.handleUpdate(e)}\r\n                  />\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </form>\r\n        <canvas \r\n          id={this.state.canvasId} \r\n          width={this.state.canvas.width} \r\n          height={this.state.canvas.height}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nclass SizeInput extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n\r\n    if(this.props.height == this.props.width) {\r\n      var square = true;\r\n    }else{\r\n      var square = false;\r\n    }\r\n\r\n    this.state = {\r\n      square: square,\r\n      height: this.props.height,\r\n      width: this.props.width,\r\n    };\r\n  }\r\n\r\n  handleSquare(event){\r\n    this.setState({\r\n      height: event.target.value,\r\n      width: event.target.value,\r\n    },\r\n    () => this.props.onChange(this.state.height,this.state.width)\r\n    );\r\n  }\r\n\r\n  handleHeight(event){\r\n    this.setState({\r\n      height: event.target.value,\r\n    },\r\n    () => this.props.onChange(this.state.height,this.state.width)\r\n    );\r\n\r\n  }\r\n\r\n  handleWidth(event){\r\n    this.setState({width: event.target.value},\r\n      () => this.props.onChange(this.state.height,this.state.width)\r\n    );\r\n  }\r\n\r\n  handleRadioInput(event){\r\n    if(event.target.value == \"true\"){\r\n      this.setState({square: true, width:this.state.height},\r\n        () => this.props.onChange(this.state.height,this.state.width)\r\n      );\r\n    }else{\r\n      this.setState({square: false},\r\n        () => this.props.onChange(this.state.height,this.state.width)\r\n      );\r\n    }\r\n  }\r\n\r\n  render(){\r\n\r\n    if(this.state.square){\r\n      return [\r\n        <tr>\r\n          <td>square image:</td>\r\n          <td>\r\n            <input\r\n              type=\"radio\"\r\n              name=\"square\"\r\n              value=\"true\"\r\n              onChange={e => this.handleRadioInput(e)}\r\n              checked=\"checked\"\r\n            /> yes\r\n            <input\r\n              type=\"radio\"\r\n              name=\"square\"\r\n              value=\"false\"\r\n              onChange={e => this.handleRadioInput(e)}\r\n            /> no\r\n          </td>\r\n        </tr>,\r\n        <tr>\r\n          <td>size:</td>\r\n          <td>\r\n            <input\r\n              type=\"number\"\r\n              min=\"50\"\r\n              max=\"800\"\r\n              onChange= {e => this.handleSquare(e)}\r\n              value={this.state.height}\r\n            />\r\n          </td>\r\n        </tr>\r\n      ];\r\n    }else{\r\n      return [\r\n        <tr>\r\n          <td>square image:</td>\r\n          <td>\r\n            <input\r\n              type=\"radio\"\r\n              name=\"square\"\r\n              value=\"true\"\r\n              onChange={e => this.handleRadioInput(e)}\r\n            /> yes\r\n            <input\r\n              type=\"radio\"\r\n              name=\"square\"\r\n              value=\"false\"\r\n              onChange={e => this.handleRadioInput(e)}\r\n              checked=\"checked\"\r\n            /> no\r\n          </td>\r\n        </tr>,\r\n        <tr>\r\n          <td>height:</td>\r\n          <td>\r\n            <input\r\n              type=\"number\"\r\n              min=\"50\"\r\n              max=\"800\"\r\n              onChange={e => this.handleHeight(e)}\r\n              value={this.state.height}\r\n            />\r\n          </td>\r\n        </tr>,\r\n        <tr>\r\n          <td>width:</td>\r\n          <td>\r\n            <input\r\n              type=\"number\"\r\n              min=\"50\"\r\n              max=\"800\"\r\n              onChange={e => this.handleWidth(e)}\r\n              value={this.state.width}\r\n            />\r\n          </td>\r\n        </tr>\r\n      ];\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default Fractal;","import React from 'react';\r\nimport Fractal from './fractalDemo';\r\n\r\nclass Demo extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      demo: this.props.demo,\r\n    };\r\n  }\r\n  render(){\r\n    switch (this.state.demo){\r\n      case 'fractal':\r\n        return (\r\n          <Fractal canvasId=\"demo\"/>\r\n        );\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default Demo;\r\n\r\n/*\r\nReactDOM.render(\r\n  <Demo demo=\"fractal\" />,\r\n  document.getElementById('root')\r\n);\r\n\r\nReactDOM.render(\r\n  <canvas id=\"myCanvas\" width={300} height={150} />,\r\n  document.getElementById('root')\r\n);\r\n*/","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport Demo from './demos.js';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>Demos</h1>\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.js</code> and save to reload.\r\n        </p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n      </header>\r\n      <Demo demo=\"fractal\"/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}